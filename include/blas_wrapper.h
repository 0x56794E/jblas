/*
 * Wrapper files for LAPACK
 *
 * automatically generated by fortranwrapper
 * hacked together by Mikio L. Braun on December 29, 2006
 */

#ifndef BLAS_WRAPPER_H
#define BLAS_WRAPPER_H

#define FCHAR char *
#define FINT int *
#define FDOUBLE double *
#define FREAL float *

typedef struct { float r; float i; } lw_complex_t;
typedef struct { double r; double i; } lw_double_complex_t;

#define FCOMPLEX lw_complex_t *
#define FDOUBLECOMPLEX lw_double_complex_t *

typedef int lw_logical_t;

#define FLOGICAL lw_logical_t *

// vector vector addition
extern void daxpy(int N, double DA, double* DX, int INCX, double* DY, int INCY);
// vector scalar product
extern double ddot(int N, double* DX, int INCX, double* DY, int INCY);
// matrix matrix multiplication
extern void dgemm(char TRANSA, char TRANSB, int M, int N, int K, double ALPHA, double* A, int LDA, double* B, int LDB, double BETA, double* C, int LDC);
// matrix vector multipliaticon
extern void dgemv(char TRANS, int M, int N, double ALPHA, double* A, int LDA, double* X, int INCX, double BETA, double* Y, int INCY);
// matrix rank 1 update
extern void dger(int M, int N, double ALPHA, double* X, int INCX, double* Y, int INCY, double* A, int LDA);


extern void caxpy(int N, lw_complex_t* CA, lw_complex_t* CX, int INCX, lw_complex_t* CY, int INCY);
extern void ccopy(int N, lw_complex_t* CX, int INCX, lw_complex_t* CY, int INCY);
extern void cdotc(lw_complex_t* RETVAL, int N, lw_complex_t* CX, int INCX, lw_complex_t* CY, int INCY);
extern void cdotu(lw_complex_t* RETVAL, int N, lw_complex_t* CX, int INCX, lw_complex_t* CY, int INCY);
extern void cgbmv(char TRANS, int M, int N, int KL, int KU, lw_complex_t* ALPHA, lw_complex_t* A, int LDA, lw_complex_t* X, int INCX, lw_complex_t* BETA, lw_complex_t* Y, int INCY);
extern void cgemm(char TRANSA, char TRANSB, int M, int N, int K, lw_complex_t* ALPHA, lw_complex_t* A, int LDA, lw_complex_t* B, int LDB, lw_complex_t* BETA, lw_complex_t* C, int LDC);
extern void cgemv(char TRANS, int M, int N, lw_complex_t* ALPHA, lw_complex_t* A, int LDA, lw_complex_t* X, int INCX, lw_complex_t* BETA, lw_complex_t* Y, int INCY);
extern void cgerc(int M, int N, lw_complex_t* ALPHA, lw_complex_t* X, int INCX, lw_complex_t* Y, int INCY, lw_complex_t* A, int LDA);
extern void cgeru(int M, int N, lw_complex_t* ALPHA, lw_complex_t* X, int INCX, lw_complex_t* Y, int INCY, lw_complex_t* A, int LDA);
extern void chbmv(char UPLO, int N, int K, lw_complex_t* ALPHA, lw_complex_t* A, int LDA, lw_complex_t* X, int INCX, lw_complex_t* BETA, lw_complex_t* Y, int INCY);
extern void chemm(char SIDE, char UPLO, int M, int N, lw_complex_t* ALPHA, lw_complex_t* A, int LDA, lw_complex_t* B, int LDB, lw_complex_t* BETA, lw_complex_t* C, int LDC);
extern void chemv(char UPLO, int N, lw_complex_t* ALPHA, lw_complex_t* A, int LDA, lw_complex_t* X, int INCX, lw_complex_t* BETA, lw_complex_t* Y, int INCY);
extern void cher(char UPLO, int N, float ALPHA, lw_complex_t* X, int INCX, lw_complex_t* A, int LDA);
extern void cher2(char UPLO, int N, lw_complex_t* ALPHA, lw_complex_t* X, int INCX, lw_complex_t* Y, int INCY, lw_complex_t* A, int LDA);
extern void cher2k(char UPLO, char TRANS, int N, int K, lw_complex_t* ALPHA, lw_complex_t* A, int LDA, lw_complex_t* B, int LDB, float BETA, lw_complex_t* C, int LDC);
extern void cherk(char UPLO, char TRANS, int N, int K, float ALPHA, lw_complex_t* A, int LDA, float BETA, lw_complex_t* C, int LDC);
extern void chpmv(char UPLO, int N, lw_complex_t* ALPHA, lw_complex_t* AP, lw_complex_t* X, int INCX, lw_complex_t* BETA, lw_complex_t* Y, int INCY);
extern void chpr(char UPLO, int N, float ALPHA, lw_complex_t* X, int INCX, lw_complex_t* AP);
extern void chpr2(char UPLO, int N, lw_complex_t* ALPHA, lw_complex_t* X, int INCX, lw_complex_t* Y, int INCY, lw_complex_t* AP);
extern void crotg(lw_complex_t* CA, lw_complex_t* CB, float C, lw_complex_t* S);
extern void cscal(int N, lw_complex_t* CA, lw_complex_t* CX, int INCX);
extern void csscal(int N, float SA, lw_complex_t* CX, int INCX);
extern void cswap(int N, lw_complex_t* CX, int INCX, lw_complex_t* CY, int INCY);
extern void csymm(char SIDE, char UPLO, int M, int N, lw_complex_t* ALPHA, lw_complex_t* A, int LDA, lw_complex_t* B, int LDB, lw_complex_t* BETA, lw_complex_t* C, int LDC);
extern void csyr2k(char UPLO, char TRANS, int N, int K, lw_complex_t* ALPHA, lw_complex_t* A, int LDA, lw_complex_t* B, int LDB, lw_complex_t* BETA, lw_complex_t* C, int LDC);
extern void csyrk(char UPLO, char TRANS, int N, int K, lw_complex_t* ALPHA, lw_complex_t* A, int LDA, lw_complex_t* BETA, lw_complex_t* C, int LDC);
extern void ctbmv(char UPLO, char TRANS, char DIAG, int N, int K, lw_complex_t* A, int LDA, lw_complex_t* X, int INCX);
extern void ctbsv(char UPLO, char TRANS, char DIAG, int N, int K, lw_complex_t* A, int LDA, lw_complex_t* X, int INCX);
extern void ctpmv(char UPLO, char TRANS, char DIAG, int N, lw_complex_t* AP, lw_complex_t* X, int INCX);
extern void ctpsv(char UPLO, char TRANS, char DIAG, int N, lw_complex_t* AP, lw_complex_t* X, int INCX);
extern void ctrmm(char SIDE, char UPLO, char TRANSA, char DIAG, int M, int N, lw_complex_t* ALPHA, lw_complex_t* A, int LDA, lw_complex_t* B, int LDB);
extern void ctrmv(char UPLO, char TRANS, char DIAG, int N, lw_complex_t* A, int LDA, lw_complex_t* X, int INCX);
extern void ctrsm(char SIDE, char UPLO, char TRANSA, char DIAG, int M, int N, lw_complex_t* ALPHA, lw_complex_t* A, int LDA, lw_complex_t* B, int LDB);
extern void ctrsv(char UPLO, char TRANS, char DIAG, int N, lw_complex_t* A, int LDA, lw_complex_t* X, int INCX);
extern double dasum(int N, double* DX, int INCX);
extern double dcabs1(lw_double_complex_t* Z);
extern void dcopy(int N, double* DX, int INCX, double* DY, int INCY);
extern void dgbmv(char TRANS, int M, int N, int KL, int KU, double ALPHA, double* A, int LDA, double* X, int INCX, double BETA, double* Y, int INCY);
extern void dgemm(char TRANSA, char TRANSB, int M, int N, int K, double ALPHA, double* A, int LDA, double* B, int LDB, double BETA, double* C, int LDC);
extern void dgemv(char TRANS, int M, int N, double ALPHA, double* A, int LDA, double* X, int INCX, double BETA, double* Y, int INCY);
extern void dger(int M, int N, double ALPHA, double* X, int INCX, double* Y, int INCY, double* A, int LDA);
extern double dnrm2(int N, double* X, int INCX);
extern void drot(int N, double* DX, int INCX, double* DY, int INCY, double C, double S);
extern void drotg(double DA, double DB, double C, double S);
extern void dsbmv(char UPLO, int N, int K, double ALPHA, double* A, int LDA, double* X, int INCX, double BETA, double* Y, int INCY);
extern void dscal(int N, double DA, double* DX, int INCX);
extern void dspmv(char UPLO, int N, double ALPHA, double* AP, double* X, int INCX, double BETA, double* Y, int INCY);
extern void dspr(char UPLO, int N, double ALPHA, double* X, int INCX, double* AP);
extern void dspr2(char UPLO, int N, double ALPHA, double* X, int INCX, double* Y, int INCY, double* AP);
extern void dswap(int N, double* DX, int INCX, double* DY, int INCY);
extern void dsymm(char SIDE, char UPLO, int M, int N, double ALPHA, double* A, int LDA, double* B, int LDB, double BETA, double* C, int LDC);
extern void dsymv(char UPLO, int N, double ALPHA, double* A, int LDA, double* X, int INCX, double BETA, double* Y, int INCY);
extern void dsyr(char UPLO, int N, double ALPHA, double* X, int INCX, double* A, int LDA);
extern void dsyr2(char UPLO, int N, double ALPHA, double* X, int INCX, double* Y, int INCY, double* A, int LDA);
extern void dsyr2k(char UPLO, char TRANS, int N, int K, double ALPHA, double* A, int LDA, double* B, int LDB, double BETA, double* C, int LDC);
extern void dsyrk(char UPLO, char TRANS, int N, int K, double ALPHA, double* A, int LDA, double BETA, double* C, int LDC);
extern void dtbmv(char UPLO, char TRANS, char DIAG, int N, int K, double* A, int LDA, double* X, int INCX);
extern void dtbsv(char UPLO, char TRANS, char DIAG, int N, int K, double* A, int LDA, double* X, int INCX);
extern void dtpmv(char UPLO, char TRANS, char DIAG, int N, double* AP, double* X, int INCX);
extern void dtpsv(char UPLO, char TRANS, char DIAG, int N, double* AP, double* X, int INCX);
extern void dtrmm(char SIDE, char UPLO, char TRANSA, char DIAG, int M, int N, double ALPHA, double* A, int LDA, double* B, int LDB);
extern void dtrmv(char UPLO, char TRANS, char DIAG, int N, double* A, int LDA, double* X, int INCX);
extern void dtrsm(char SIDE, char UPLO, char TRANSA, char DIAG, int M, int N, double ALPHA, double* A, int LDA, double* B, int LDB);
extern void dtrsv(char UPLO, char TRANS, char DIAG, int N, double* A, int LDA, double* X, int INCX);
extern double dzasum(int N, lw_double_complex_t* ZX, int INCX);
extern double dznrm2(int N, lw_double_complex_t* X, int INCX);
extern int icamax(int N, lw_complex_t* CX, int INCX);
extern int idamax(int N, double* DX, int INCX);
extern int isamax(int N, float* SX, int INCX);
extern int izamax(int N, lw_double_complex_t* ZX, int INCX);
extern lw_logical_t lsame(char CA, char CB);
extern float sasum(int N, float* SX, int INCX);
extern void saxpy(int N, float SA, float* SX, int INCX, float* SY, int INCY);
extern float scasum(int N, lw_complex_t* CX, int INCX);
extern float scnrm2(int N, lw_complex_t* X, int INCX);
extern void scopy(int N, float* SX, int INCX, float* SY, int INCY);
extern float sdot(int N, float* SX, int INCX, float* SY, int INCY);
extern void sgbmv(char TRANS, int M, int N, int KL, int KU, float ALPHA, float* A, int LDA, float* X, int INCX, float BETA, float* Y, int INCY);
extern void sgemm(char TRANSA, char TRANSB, int M, int N, int K, float ALPHA, float* A, int LDA, float* B, int LDB, float BETA, float* C, int LDC);
extern void sgemv(char TRANS, int M, int N, float ALPHA, float* A, int LDA, float* X, int INCX, float BETA, float* Y, int INCY);
extern void sger(int M, int N, float ALPHA, float* X, int INCX, float* Y, int INCY, float* A, int LDA);
extern float snrm2(int N, float* X, int INCX);
extern void srot(int N, float* SX, int INCX, float* SY, int INCY, float C, float S);
extern void srotg(float SA, float SB, float C, float S);
extern void ssbmv(char UPLO, int N, int K, float ALPHA, float* A, int LDA, float* X, int INCX, float BETA, float* Y, int INCY);
extern void sscal(int N, float SA, float* SX, int INCX);
extern void sspmv(char UPLO, int N, float ALPHA, float* AP, float* X, int INCX, float BETA, float* Y, int INCY);
extern void sspr(char UPLO, int N, float ALPHA, float* X, int INCX, float* AP);
extern void sspr2(char UPLO, int N, float ALPHA, float* X, int INCX, float* Y, int INCY, float* AP);
extern void sswap(int N, float* SX, int INCX, float* SY, int INCY);
extern void ssymm(char SIDE, char UPLO, int M, int N, float ALPHA, float* A, int LDA, float* B, int LDB, float BETA, float* C, int LDC);
extern void ssymv(char UPLO, int N, float ALPHA, float* A, int LDA, float* X, int INCX, float BETA, float* Y, int INCY);
extern void ssyr(char UPLO, int N, float ALPHA, float* X, int INCX, float* A, int LDA);
extern void ssyr2(char UPLO, int N, float ALPHA, float* X, int INCX, float* Y, int INCY, float* A, int LDA);
extern void ssyr2k(char UPLO, char TRANS, int N, int K, float ALPHA, float* A, int LDA, float* B, int LDB, float BETA, float* C, int LDC);
extern void ssyrk(char UPLO, char TRANS, int N, int K, float ALPHA, float* A, int LDA, float BETA, float* C, int LDC);
extern void stbmv(char UPLO, char TRANS, char DIAG, int N, int K, float* A, int LDA, float* X, int INCX);
extern void stbsv(char UPLO, char TRANS, char DIAG, int N, int K, float* A, int LDA, float* X, int INCX);
extern void stpmv(char UPLO, char TRANS, char DIAG, int N, float* AP, float* X, int INCX);
extern void stpsv(char UPLO, char TRANS, char DIAG, int N, float* AP, float* X, int INCX);
extern void strmm(char SIDE, char UPLO, char TRANSA, char DIAG, int M, int N, float ALPHA, float* A, int LDA, float* B, int LDB);
extern void strmv(char UPLO, char TRANS, char DIAG, int N, float* A, int LDA, float* X, int INCX);
extern void strsm(char SIDE, char UPLO, char TRANSA, char DIAG, int M, int N, float ALPHA, float* A, int LDA, float* B, int LDB);
extern void strsv(char UPLO, char TRANS, char DIAG, int N, float* A, int LDA, float* X, int INCX);
extern int xerbla(int SRNAME);
extern void zaxpy(int N, lw_double_complex_t* ZA, lw_double_complex_t* ZX, int INCX, lw_double_complex_t* ZY, int INCY);
extern void zcopy(int N, lw_double_complex_t* ZX, int INCX, lw_double_complex_t* ZY, int INCY);
extern void zdotc(lw_double_complex_t* RETVAL, int N, lw_double_complex_t* ZX, int INCX, lw_double_complex_t* ZY, int INCY);
extern void zdotu(lw_double_complex_t* RETVAL, int N, lw_double_complex_t* ZX, int INCX, lw_double_complex_t* ZY, int INCY);
extern void zdscal(int N, double DA, lw_double_complex_t* ZX, int INCX);
extern void zgbmv(char TRANS, int M, int N, int KL, int KU, lw_double_complex_t* ALPHA, lw_double_complex_t* A, int LDA, lw_double_complex_t* X, int INCX, lw_double_complex_t* BETA, lw_double_complex_t* Y, int INCY);
extern void zgemm(char TRANSA, char TRANSB, int M, int N, int K, lw_double_complex_t* ALPHA, lw_double_complex_t* A, int LDA, lw_double_complex_t* B, int LDB, lw_double_complex_t* BETA, lw_double_complex_t* C, int LDC);
extern void zgemv(char TRANS, int M, int N, lw_double_complex_t* ALPHA, lw_double_complex_t* A, int LDA, lw_double_complex_t* X, int INCX, lw_double_complex_t* BETA, lw_double_complex_t* Y, int INCY);
extern void zgerc(int M, int N, lw_double_complex_t* ALPHA, lw_double_complex_t* X, int INCX, lw_double_complex_t* Y, int INCY, lw_double_complex_t* A, int LDA);
extern void zgeru(int M, int N, lw_double_complex_t* ALPHA, lw_double_complex_t* X, int INCX, lw_double_complex_t* Y, int INCY, lw_double_complex_t* A, int LDA);
extern void zhbmv(char UPLO, int N, int K, lw_double_complex_t* ALPHA, lw_double_complex_t* A, int LDA, lw_double_complex_t* X, int INCX, lw_double_complex_t* BETA, lw_double_complex_t* Y, int INCY);
extern void zhemm(char SIDE, char UPLO, int M, int N, lw_double_complex_t* ALPHA, lw_double_complex_t* A, int LDA, lw_double_complex_t* B, int LDB, lw_double_complex_t* BETA, lw_double_complex_t* C, int LDC);
extern void zhemv(char UPLO, int N, lw_double_complex_t* ALPHA, lw_double_complex_t* A, int LDA, lw_double_complex_t* X, int INCX, lw_double_complex_t* BETA, lw_double_complex_t* Y, int INCY);
extern void zher(char UPLO, int N, double ALPHA, lw_double_complex_t* X, int INCX, lw_double_complex_t* A, int LDA);
extern void zher2(char UPLO, int N, lw_double_complex_t* ALPHA, lw_double_complex_t* X, int INCX, lw_double_complex_t* Y, int INCY, lw_double_complex_t* A, int LDA);
extern void zher2k(char UPLO, char TRANS, int N, int K, lw_double_complex_t* ALPHA, lw_double_complex_t* A, int LDA, lw_double_complex_t* B, int LDB, double BETA, lw_double_complex_t* C, int LDC);
extern void zherk(char UPLO, char TRANS, int N, int K, double ALPHA, lw_double_complex_t* A, int LDA, double BETA, lw_double_complex_t* C, int LDC);
extern void zhpmv(char UPLO, int N, lw_double_complex_t* ALPHA, lw_double_complex_t* AP, lw_double_complex_t* X, int INCX, lw_double_complex_t* BETA, lw_double_complex_t* Y, int INCY);
extern void zhpr(char UPLO, int N, double ALPHA, lw_double_complex_t* X, int INCX, lw_double_complex_t* AP);
extern void zhpr2(char UPLO, int N, lw_double_complex_t* ALPHA, lw_double_complex_t* X, int INCX, lw_double_complex_t* Y, int INCY, lw_double_complex_t* AP);
extern void zrotg(lw_double_complex_t* CA, lw_double_complex_t* CB, double C, lw_double_complex_t* S);
extern void zscal(int N, lw_double_complex_t* ZA, lw_double_complex_t* ZX, int INCX);
extern void zswap(int N, lw_double_complex_t* ZX, int INCX, lw_double_complex_t* ZY, int INCY);
extern void zsymm(char SIDE, char UPLO, int M, int N, lw_double_complex_t* ALPHA, lw_double_complex_t* A, int LDA, lw_double_complex_t* B, int LDB, lw_double_complex_t* BETA, lw_double_complex_t* C, int LDC);
extern void zsyr2k(char UPLO, char TRANS, int N, int K, lw_double_complex_t* ALPHA, lw_double_complex_t* A, int LDA, lw_double_complex_t* B, int LDB, lw_double_complex_t* BETA, lw_double_complex_t* C, int LDC);
extern void zsyrk(char UPLO, char TRANS, int N, int K, lw_double_complex_t* ALPHA, lw_double_complex_t* A, int LDA, lw_double_complex_t* BETA, lw_double_complex_t* C, int LDC);
extern void ztbmv(char UPLO, char TRANS, char DIAG, int N, int K, lw_double_complex_t* A, int LDA, lw_double_complex_t* X, int INCX);
extern void ztbsv(char UPLO, char TRANS, char DIAG, int N, int K, lw_double_complex_t* A, int LDA, lw_double_complex_t* X, int INCX);
extern void ztpmv(char UPLO, char TRANS, char DIAG, int N, lw_double_complex_t* AP, lw_double_complex_t* X, int INCX);
extern void ztpsv(char UPLO, char TRANS, char DIAG, int N, lw_double_complex_t* AP, lw_double_complex_t* X, int INCX);
extern void ztrmm(char SIDE, char UPLO, char TRANSA, char DIAG, int M, int N, lw_double_complex_t* ALPHA, lw_double_complex_t* A, int LDA, lw_double_complex_t* B, int LDB);
extern void ztrmv(char UPLO, char TRANS, char DIAG, int N, lw_double_complex_t* A, int LDA, lw_double_complex_t* X, int INCX);
extern void ztrsm(char SIDE, char UPLO, char TRANSA, char DIAG, int M, int N, lw_double_complex_t* ALPHA, lw_double_complex_t* A, int LDA, lw_double_complex_t* B, int LDB);
extern void ztrsv(char UPLO, char TRANS, char DIAG, int N, lw_double_complex_t* A, int LDA, lw_double_complex_t* X, int INCX);

#endif


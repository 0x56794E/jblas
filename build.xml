<?xml version="1.0" encoding="UTF-8"?>
<!-- 
Copyright (c) 2009, Mikio L. Braun
Copyright (c) 2008, Johannes Schaback
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above
      copyright notice, this list of conditions and the following
      disclaimer in the documentation and/or other materials provided
      with the distribution.

    * Neither the name of the Technische UniversitÃ¤t Berlin nor the
      names of its contributors may be used to endorse or promote
      products derived from this software without specific prior
      written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<project name="java-blas" basedir="." default="jar">
    <description>
		This is the build script to compile and deploy the java-blas project.
		It also generates JavaDoc from source in ../doc.
    </description>

    <import file="configure.xml" />

	<!-- Define directories -->
    <property name="src" value="${basedir}/src" />
    <property name="test" value="${basedir}/test" />
    <property name="bin" value="${basedir}/bin" />
    <property name="native-libs" value="${basedir}/native-libs" />
    <property name="doc" value="${basedir}/javadoc" />
    <property name="jar" value="${basedir}/jblas.jar" />
    <property name="include" value="${basedir}/include" />
    <property name="native" value="${basedir}/native" />
    <property name="external" value="${basedir}/external" />
    <property name="scripts" value="${basedir}/scripts" />
    <property name="pkgbase" value="org.jblas" />
    <property name="version" value="0.2" />
    <macrodef name="class-to-float">
        <attribute name="class"/>
        <attribute name="path" default="src"/>
        <sequential>
            <echo message="Generating float version of @{class}"/>
            <exec executable="ruby">
                <arg line="scripts/class_to_float.rb @{path} @{class}"/>
            </exec>
        </sequential>
    </macrodef>
    <macrodef name="static-class-to-float">
        <attribute name="class"/>
        <sequential>
            <echo message="Add float versions to class @{class}"/>
            <exec executable="ruby">
                <arg line="scripts/static_class_to_float.rb src @{class}"/>
            </exec>
        </sequential>
    </macrodef>
    <macrodef name="rjpp">
        <attribute name="file"/>
        <sequential>
            <exec executable="ruby">
                <arg line="scripts/rjpp.rb @{file}"/>
            </exec>
        </sequential>
    </macrodef>
    <target name="clean">
        <delete dir="${doc}" />
        <delete dir="${bin}" />
        <delete dir="${include}" />
        <delete file="${jar}" />
        <exec executable="${make}">
            <arg line="clean" />
        </exec>
    </target>
    <target name="realclean" depends="clean">
        <exec executable="${make}">
            <arg line="realclean" />
        </exec>
    </target>
    <target name="prepare">
        <mkdir dir="${bin}" />
        <mkdir dir="${native}" />
        <mkdir dir="${include}" />
    </target>
    <target name="compile" depends="prepare,wrapper,generate-float">
        <javac destdir="${bin}" encoding="utf-8" source="1.6" debug="on" compiler="javac1.6" fork="yes" nowarn="yes">
            <src path="${src}" />
        </javac>
    </target>
    <target name="compile-test" depends="compile">
        <javac destdir="${bin}" encoding="utf-8" source="1.6" debug="on" compiler="javac1.6" fork="yes" nowarn="yes">
            <src path="${test}" />
            <classpath>
                <pathelement location="${external}/junit.jar" />
            </classpath>
        </javac>
    </target>
    <target name="javah" depends="prepare,wrapper,compile">
        <javah destdir="${include}" force="yes">
            <class name="${pkgbase}.la.Blas" />
            <classpath>
                <pathelement path="${bin}" />
            </classpath>
        </javah>
    </target>
    <target name="compile-native" depends="prepare,javah">
        <exec executable="${make}">
            <arg line="compile-native" />
        </exec>
    </target>
    <target name="wrapper" depends="prepare">
        <exec executable="${make}">
            <arg line="generate-wrapper" />
        </exec>
    </target>
    <target name="generate-float" depends="preprocess">
        <class-to-float class="${pkgbase}.la.DoubleMatrix"/>
        <class-to-float class="${pkgbase}.la.DoubleFunction"/>
        <class-to-float class="${pkgbase}.core.ComplexDouble"/>
        <class-to-float path="test" class="${pkgbase}.la.TestDoubleMatrix"/>
        <class-to-float path="test" class="${pkgbase}.la.TestBlasDouble"/>
        <class-to-float class="${pkgbase}.la.ComplexDoubleMatrix"/>
        <static-class-to-float class="${pkgbase}.la.SimpleBlas"/>
        <static-class-to-float class="${pkgbase}.la.Solve"/>
        <static-class-to-float class="${pkgbase}.la.Eigen"/>
        <static-class-to-float class="${pkgbase}.la.Geometry"/>
        <static-class-to-float class="${pkgbase}.la.MatrixFunctions"/>
        <static-class-to-float class="${pkgbase}.la.JavaBlas"/>
    </target>
    <target name="preprocess">
        <rjpp file="src/org/jblas/la/DoubleMatrix.java"/>
        <rjpp file="test/org/jblas/la/TestDoubleMatrix.java"/>
        <rjpp file="src/org/jblas/la/MatrixFunctions.java"/>
        <rjpp file="src/org/jblas/la/ComplexDoubleMatrix.java"/>
    </target>
    <target name="create-jar">
        <jar destfile="${jar}">
            <fileset dir="${bin}">
                <include name="org/**" />
                <include name="lib/**/lib*.so"/>
                <include name="lib/**/*.dll"/>
            </fileset>
            <manifest>
                <attribute name="Built-By" value="IDA Group, TU Berlin" />
            </manifest>
        </jar>
    </target>
    <target name="jar">
      <delete dir="${bin}/lib" />
      <copy todir="${bin}/lib">
	<fileset dir="${native-libs}">
	  <include name="${os_name}/${os_arch}/*" />
	</fileset>
      </copy>
      <antcall target="create-jar" />
    </target>    
    <target name="local-jar" depends="compile,compile-native">
      <delete dir="${bin}/lib" />
      <copy todir="${bin}/lib">
	<fileset dir="${native-libs}">
	  <include name="${os_name}/${os_arch}/*" />
	</fileset>
      </copy>
      <antcall target="create-jar">
	<param name="jar" value="jblas-${os_name}-${os_arch}.jar" />
      </antcall>
    </target>
    <target name="fat-jar" depends="compile,compile-native">
      <delete dir="${bin}/lib" />
      <copy todir="${bin}/lib">
	<fileset dir="${native-libs}" />
      </copy>
      <antcall target="create-jar">
	<param name="jar" value="jblas-multiplatform.jar" />
      </antcall>
    </target>
    <target name="lean-jar" depends="compile,compile-native">
        <jar destfile="${jar}">
            <fileset dir="${bin}">
                <include name="org/**" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="IDA Group, TU Berlin" />
            </manifest>
        </jar>
    </target>
    <target name="javadoc" depends="generate-float">
        <mkdir dir="${doc}" />
        <javadoc packagenames="org.jblas.*"
		sourcepath="${src}" defaultexcludes="yes"
		destdir="${doc}" author="true" version="true"
		use="true" windowtitle="jblas" linksource="yes"
			stylesheetfile="javadoc.css" overview="${src}/overview.html">
            <doctitle>
	<![CDATA[ <h1>jblas - Linear Algebra for Java</h1> ]]>
            </doctitle>
            <bottom>
	<![CDATA[ written by Mikio L. Braun and Johannes Schaback ]]>
            </bottom>
            <tag name="dedication" scope="all" description="Dedication:" />
        </javadoc>
    </target>
    <target name="test" depends="compile-test,jar">
        <junit printsummary="yes" haltonfailure="yes" showoutput="yes">
            <classpath>
                <pathelement location="${external}/junit.jar" />
                <pathelement path="${bin}" />
            </classpath>
            <formatter type="plain" usefile="false" />
            <test name="${pkgbase}.la.TestDoubleMatrix" />
            <test name="${pkgbase}.la.TestEigen" />
        </junit>
    </target>
    <target name="all" depends="jar, javadoc">
    </target>
    <target name="debugDirectBufferGC" depends="jar">
        <java classname="${pkgbase}.la.DebugDirectBufferGC" classpath="${basedir}/jBLAS.jar" />
    </target>
    <target name="tar" depends="javadoc">
        <tar destfile="jblas-${version}.tgz" compression="gzip">
            <tarfileset dir="${basedir}" prefix="jblas-${version}">
                <include name="src/**" />
                <include name="test/**" />
                <exclude name="**/*.rjpp" />
                <exclude name="**/semantic.cache" />
                <include name="scripts/**" />
                <exclude name="**/*~" />
                <include name="build.xml" />
                <include name="Makefile" />
                <include name="config/*.rb" />
                <include name="config/*.java" />
                <include name="fortranwrapper.dump" />
                <include name="README" />
                <include name="INSTALL" />
                <include name="COPYING" />
                <include name="AUTHORS" />
                <include name="javadoc.css" />
                <include name="javadoc/**" />
                <include name="nbproject/**" />
            </tarfileset>
            <tarfileset dir="${basedir}" prefix="jblas-${version}" mode="755"
		    includes="configure" />
        </tar>
    </target>
</project>
